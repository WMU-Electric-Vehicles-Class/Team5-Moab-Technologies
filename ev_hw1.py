# -*- coding: utf-8 -*-
"""EV_hw1.ipynb

****** Nicolas Brown ******

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17oLajjl16nfqSqXXYdpRs24EPFcCdYxJ

**Import Libraries**
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

"""# **Problem #1**

**Import csv file from computer**
"""

from google.colab import files
uploaded = files.upload()

ftp = pd.read_csv('ftpcol.csv')
hwy = pd.read_csv('hwycol.csv')
urban = pd.read_csv('uddscol.csv')

plt.plot(ftp['time'], ftp['kph'], label='ftp')
plt.plot(hwy['time'], hwy['kph'], label='hwy')
plt.plot(urban['time'], urban['kph'], linestyle = 'dashdot', label='udd')
plt.xlabel('[s]')
plt.ylabel('[kph]')
plt.title('US EPA: velocity vs time')
plt.legend()
plt.grid()

plt.plot(ftp['time'], ftp['mph'], label='ftp')
plt.plot(hwy['time'], hwy['mph'], label='hwy')
plt.plot(urban['time'], urban['mph'], linestyle = 'dashdot', label='udd')
plt.xlabel('[mi]')
plt.ylabel('[mph]')
plt.title('US EPS FTP')
plt.legend()
plt.grid()

plt.plot(ftp['time'], ftp['accel'], linestyle = '-.', label='ftp')
plt.plot(hwy['time'], hwy['accel'], linestyle = ':', label='hwy')
plt.plot(urban['time'], urban['accel'], linestyle = '--', label='udd')
plt.xlabel('[s]')
plt.ylabel('[Gs]')
plt.title('US EPS FTP')
plt.legend()
plt.grid()

plt.plot(ftp['time'], ftp['dist'], linestyle = '-.', label='ftp')
plt.plot(hwy['time'], hwy['dist'], linestyle = ':', label='hwy')
plt.plot(urban['time'], urban['dist'], linestyle = '--', label='udd')
plt.xlabel('[s]')
plt.ylabel('[mi]')
plt.title('US EPS FTP')
plt.legend()
plt.grid()

fig, axs = plt.subplots(3, 1)
axs[0].set_title('velocity vs time')
axs[0].plot(ftp['time'], ftp['mph'])
axs[0].set_ylabel('[mph]')
axs[0].set_xlabel('[s]')
axs[0].grid(True)

axs[1].plot(hwy['time'], hwy['mph'], color='orange')
axs[1].set_xlabel('[s]')
axs[1].set_ylabel('[mph]')
axs[1].grid(True)

axs[2].plot(urban['time'], urban['mph'], color='orange')
axs[2].set_xlabel('[s]')
axs[2].set_ylabel('[mph]')
axs[2].grid(True)

fig.tight_layout()
plt.show()

fig, axs = plt.subplots(3, 1)
axs[0].set_title('velocity vs distance')
axs[0].plot(ftp['dist'], ftp['mph'])
axs[0].set_ylabel('[mph]')
axs[0].set_xlabel('[mi]')
axs[0].grid(True)

axs[1].plot(hwy['dist'], hwy['mph'], color='orange')
axs[1].set_xlabel('[mi]')
axs[1].set_ylabel('[mph]')
axs[1].grid(True)

axs[2].plot(urban['dist'], urban['mph'], color='orange')
axs[2].set_xlabel('[mi]')
axs[2].set_ylabel('[mph]')
axs[2].grid(True)

fig.tight_layout()
plt.show()

fig, axs = plt.subplots(3, 1)
axs[0].set_title('velocity vs time')
axs[0].plot(ftp['time'], ftp['kph'])
axs[0].set_ylabel('[kph]')
axs[0].set_xlabel('[s]')
axs[0].grid(True)

axs[1].plot(hwy['time'], hwy['kph'], color='orange')
axs[1].set_xlabel('[s]')
axs[1].set_ylabel('[kph]')
axs[1].grid(True)

axs[2].plot(urban['time'], urban['kph'], color='orange')
axs[2].set_xlabel('[s]')
axs[2].set_ylabel('[kph]')
axs[2].grid(True)

fig.tight_layout()
plt.show()

fig, axs = plt.subplots(3, 1)
axs[0].set_title('velocity vs time')
axs[0].plot(ftp['time'], ftp['accel'])
axs[0].set_ylabel('[G\'s]')
axs[0].set_xlabel('[s]')
axs[0].grid(True)

axs[1].plot(hwy['time'], hwy['accel'], color='orange')
axs[1].set_xlabel('[s]')
axs[1].set_ylabel('[G\'s]]')
axs[1].grid(True)

axs[2].plot(urban['time'], urban['accel'], color='orange')
axs[2].set_xlabel('[s]')
axs[2].set_ylabel('[G\'s]')
axs[2].grid(True)

fig.tight_layout()
plt.show()

fig, axs = plt.subplots(3, 1)
axs[0].set_title('velocity vs time')
axs[0].plot(ftp['dist'], ftp['accel'])
axs[0].set_ylabel('[G\'s]')
axs[0].set_xlabel('[s]')
axs[0].grid(True)

axs[1].plot(hwy['dist'], hwy['accel'], color='orange')
axs[1].set_xlabel('[s]')
axs[1].set_ylabel('[G\'s]]')
axs[1].grid(True)

axs[2].plot(urban['dist'], urban['accel'], color='orange')
axs[2].set_xlabel('[s]')
axs[2].set_ylabel('[G\'s]')
axs[2].grid(True)

fig.tight_layout()
plt.show()

